from fastapi import APIRouter
from sqlalchemy import select
from app.bookings.dao import BookingDAO
from app.database import async_session_maker
from app.bookings.model import Bookings
from app.bookings.schemas import SBooking

router = APIRouter(
    prefix="/bookings",
    tags=["Бронирования"]
)

@router.get("")
async def get_bookings() -> list[SBooking]: # Данная Подсказка недействительна!!!!!!! такая замороченная запись после стрелки(->) т.к. использовал result.mappings().all() альтернативой является results.scalars().all() но тогда придется использовать класс class Config() в schemas.py
    return await BookingDAO.find_one_or_none()        # @router.get("")
                                                # async def get_bookings():
                                                #     return await BookingRepository.find_all(Booking.id > 1, Booking.user_id == 2)




#response_model = None отключает валидацию, что в корне неверно если хотите использовать mappings(), вот пример кода:
 # Ключом может быть любая строка
# @router.get("")
# async def get_bookings() -> list[dict[str, SBooking]]:
#     return await BookingDAO.find_all()

# # Если нужен определенный ключ

# from typing import Literal

# BookingsList = list[dict[Literal["Booking"], SBooking]]




    
    



