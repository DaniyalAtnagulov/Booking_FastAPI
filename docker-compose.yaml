services:
  db:
    image: postgres:16.3
    container_name: booking_db
    env_file:
      - .env-non-dev
    ports:
      - "5432:5432"
    volumes:
      - booking_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    container_name: booking_redis

  booking:
    build:
      context: .
    container_name: booking_app
    env_file:
      - .env-non-dev
    environment:
      - PYTHONPATH=/booking
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: ["/booking/docker/app.sh"]
    working_dir: /booking
    ports:
      - "7777:8000"

  celery:
    build:
      context: .
    container_name: booking_celery
    command: sh -c "celery --app=app.tasks.celery_app:celery worker -l INFO"
    env_file:
      - .env-non-dev
    environment:
      - PYTHONPATH=/booking
    working_dir: /booking
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy

  flower:
    build:
      context: .
    container_name: booking_flower
    command: sh -c "celery --app=app.tasks.celery_app:celery flower"
    ports:
      - "5555:5555"
    env_file:
      - .env-non-dev
    environment:
      - PYTHONPATH=/booking
    working_dir: /booking
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy

volumes:
  booking_db_data: